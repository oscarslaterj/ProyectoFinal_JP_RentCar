<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="RentarButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>